args(ls.list
)
args(name = "ls.list"
)
?args
args(ls)
args(list.files)
old.dir=getwd()
old.dir=list.dirs(getwd())
old.dir
getwd()
old.dir <- getwd()
pplay()
play()
x <- y = 5
y
x <- y
x <- y <- 5
xx <- yy = 5
xx
yy
print(xx=5)
print(xx<-5)
xx
nxt()
old.dir
getwd()
play()
nxt()
?dir
attributes(dir)
dir.create(path = "testdir",)
?cd
setwd("testdir/")
file.create("mytest.R")
list.files()
ls()
file.info()
file.info()
file.info()
file.exists()
file.info("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")$isdir
play()
file.info("mytest.R")$isdir
attributes(file.info)
attributes(file)
file.info("mytest.R")$size
?file.info
file.info("mytest.R")
Sys.chmod("mytest.R",mode = "755")
file.info("mytest.R")$mode
nxt()
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3",recursive = TRUE)
list.files
play()
clear()
list.files()
list.dirs()
nxt()
file.remove("testdir2/")
?file
?file.remove
file.remove("testdir2/", recursive=TRUE)
file.remove("testdir2", recursive=TRUE)
file.remove("testdir2", "testdir2/testdir3/")
file.remove("testdir2/testdir3/", "testdir2")
file.remove("testdir2/testdir3/", "testdir2/")
file.remove("testdir2/testdir3",recursive = TRUE)
info()
list.files()
dir.create("testdir2/testdir3",recursive = TRUE)
list.files()
list.dirs()
file.remove("testdir2/testdir3",recursive = TRUE)
list.dirs()
dir.create("testdir2/testdir3",recursive = TRUE)
list.dirs()
file.remove("testdir2/testdir3", "testdir2/")
list.dirs()
file.remove("testdir2",)
file.remove("testdir2/",)
nxt()
file.remove("testdir2/",)
dir.create("testdir2",recursive = TRUE)
file.remove("testdir2/")
file.remove("testdir2")
nxt()
list.dirs()
file.create("testdir2/testdir3", "testdir2/")
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
getwd
getwd()
setwd(old.dir)
unlink("testdir/", recursive = TRUE)
unlink("testdir/", recursive = TRUE)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
`:`
?`:`
?seq
seq(1:20)
seq(1:20)
seq(1,20)
seq(0,10,by=0.5)
seq(0,10,0.5)
seq(0,10,length.out = 30)
seq(5,10,length.out = 30)
seq(5,10,length = 30)
my_seq <- (5,10,length.out = 30)
my_seq <- seq(5,10,length.out = 30)
length(my_seq)
seq(1, length(my_seq))
seq(1, length(my_seq)) == 1:length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
play()
?rep
rep(1:4, 2)
rep(1:4, each=3)
rep(1:4, c(2,1,2,1))
rep(1:4, each=3, len=5)
rep(1:4, each=3, times=5)
x
rep_len(x, 4)
rep.int(x,4)
x=c(1,2.22)
x
rep.int(x,4)
rep_len(x, 4)
x
nxt
nxt()
rep(0,40)
rep(0,times=40)
skip()
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf <- (num_vect <1)
tf <- num_vect <1
tf
(num_vect >=6)
num_vect >=6
play()
(1 & 2)
2
1&2
(1 && 2)
(1 &&& 2)
?&&
?'&'
a
b
a=c(1:3)
a
b <- a+1
b
(a==b)
a&&b
c= c(0,0,0)
c
isTRUE(c)
isTRUE(a)
isTRUE(a[1])
a
isTRUE(1)
isTRUE(T)
isTRUE(0)
a
b
c
a&c
a&&c
a|c
a||c
nxt()
char_vector <- c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char,collapse = " ")
play()
?paste
my_char
paste(my_char, sep = " ")
paste(my_char, sep = ":")
my_char
pru = paste(my_char, sep = ":")
pru
pru = paste(my_char, "fer", sep = ":")
pru
paste(my_char, "fer", sep = ":", collapse = ".")
pru
as.character(pru)
as.character(5)
c
as.character(c)
nxt()
c(my_char, "fegonzalez")
pru = paste(my_char, sep = " ")
c(my_char, "fegonzalez")
play()
my_char
paste(my_char, collapse = " ")
my_char
my_char <- paste(my_char, collapse = " ")
my_char
paste(my_char, "fegonzale", collapse = " ")
paste(my_char, "fegonzalez", collapse = " ")
nxt()
c(my_char, "fegonzalez")
my_char
my_char <- paste(my_char, collapse = " ")
c(my_char, "fegonzalez")
my_name <- c(my_char, "fegonzalez")
my_name
my_name <- paste(my_name, collapse = " ")
paste(my_name, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1,2,3), c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
c(44,NA,5,NA)
x = c(44,NA,5,NA)
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
play()
?rep
rep(NA,10)
rep_len(NA,10)
nxt()
z <- rep(NA,1000)
?sample
play()
x
x < 1:10
x <- 1:10
x
sample(x,3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
sample(c(x,22,44),3)
nxt()
y
z
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_na
my_na
my_data
0/0
100/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
sum(is.na(x))
y <- x[!is.na(x)]
y
y
y[y>0]
x[x>0]
x[x>0] && x[!is.na(x)]
x[x>0 & (!is.na(x))]
x[x>0 & !is.na(x)]
x[!is.na(x) & x>0]
x[3,5,7]
x(3,5,7)
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
play()
x
nxt()
x[-c(2, 10)]
play()
x[1:10]     # range
nxt()
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
?identical
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
play()
?subset
x
subset(x, subset = x>0)
subset(x)
subset(x,subset = x)
subset(x,subset =   )
subset(x,subset.default)
subset(x>0)
subset.default(x)
subset.default(x>0)
nxt()
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
attributes(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
play()
dim(my_vector) <- c(4,5)
matrix(1:20) == dim(vector(1:20) <- c(4,5)
;
mat_or_not <- dim(vector(1:20) <- c(4,5)
)
dim(vector(1:20) <- c(4,5)
)
mat_or_not <- dim((one_vector <-c(1:20))) <- c(4,5)
mat_or_not <- dim((one_vector <- c(1:20))) <- c(4,5)
one_vector <- c(1:20)
one_e
one_e
one_vector
rm(one_vector)
one_vector
mat_or_not <- dim(one_vector <- 1:20) <- c(4,5)
(one_vector <- 1:20)
one_vector
dim(one_vector) <- c(4,5)
one_vector
?dim
nxt()
?matrix
my_matrix2 <- matrix(nrow = 4, ncol=5, 1:20)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
?cbind
patients
my_matrix2
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
play()
?matrix
x
class(x)
y
z
x
x=1:20
x
dim(x)
x
nx
dim(x)=c(5,4)
x
dimnames(x)
dimnames(x)
dimnames(x) <- list(c("row1", "row2"), c("col1", "col2", "col3"))
dimnames(x) <- list(c("row1", "row2"), c("col1", "col2", "col3", "col4", "col5"))
dimnames(x) <- list(c("row1", "row2"), c("col1", "col2", "col3", "col4"))
dimnames(x) <- list(c("row1", "row2", "r3", "r4", "r5"), c("col1", "col2", "col3", "col4"))
x
class(x)
nxt()
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
my_data
class(my_data)
attributes(my_data)
colnames(my_data)
colnames(my_data) = cnames
colnames(my_data)
cnames
colnames(my_data) <- cnames
cnames
colnames(my_data)
my_data
TRUE==TRUE
F==T
(F==T)==F
(FALSE == TRUE) == FALSE
6==7
skip
skip()
skip()
5!=7
skip()
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
c(TRUE, TRUE, TRUE) & c(TRUE, FALSE, FALSE)
c(TRUE, TRUE, TRUE) && c(TRUE, FALSE, FALSE)
c(TRUE, TRUE, TRUE) && c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
T | c(T,F,F)
skip()
skip()
skip()
isTRUE(6 > 4)
skip()
?xor
xor(3,4)
xor(3,0)
xor(T,T)
xor(T,F)
xor(5 == 6, !FALSE)
?sample
ints <- sample(10)
ints
ints>5
which
which(ints>7)
any(ints)
all(ints)
ints
any(ints<0)
all(ints>0)
quit()
swirl()
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
as.character.Date(d1)
d2 <- as.Date("1969-01-01")
class(d2)
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
t1
unclass(t1)
unclass(t2)
?str
str(unclass(x))
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
ls()
ls(plants)
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
?summary
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
head(flags)
str(object = flags)
dim(flags)
viewinfo()
class(flags)
setwd("~/u/workspace/R/workdir/coursera_r_course")
setwd("~/u/workspace/R/workdir/coursera_r_course/exercises/1")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
pollutantmean("specdata", "sulfate", 1:10)
